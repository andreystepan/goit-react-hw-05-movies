{"version":3,"file":"static/js/170.8028bf85.chunk.js","mappings":"mQAGaA,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sOAaPE,EAAYF,EAAAA,GAAAA,IAAH,qDAITG,EAAMH,EAAAA,GAAAA,IAAH,sBAEHI,GAAUJ,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sO,SC6BpB,EA7CqB,WACnB,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAMA,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcN,GAASO,KAAKH,EAC7B,GAAE,CAACJ,IAECG,EAAL,CAIA,IAAQK,EAAuDL,EAAvDK,YAAaC,EAA0CN,EAA1CM,MAAOC,EAAmCP,EAAnCO,aAAcC,EAAqBR,EAArBQ,SAAUC,EAAWT,EAAXS,OAEpD,OACE,iCACE,UAACf,EAAD,YACE,SAACH,EAAD,CAASmB,GAAG,IAAZ,uBACA,0BACE,gBACEC,MAAM,MACNC,IAAG,yCAAoCP,GACvCQ,IAAI,WAIR,wBAAKP,KACL,0CAAkBC,MAClB,4BACE,qCADF,IACqBC,MAErB,yBAAMC,EAAOK,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,QAC3C,uDAEF,UAACtB,EAAD,YACE,SAACC,EAAD,CAASc,GAAG,OAAZ,mBAEA,SAACd,EAAD,CAASc,GAAG,UAAZ,yBAGF,SAAC,KAAD,MA9BH,CAiCF,C","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const LinkBtn = styled(Link)`\n  text-decoration: none;\n  display: inline-block;\n  margin: 8px;\n  padding: 8px;\n  border: solid 1px;\n  border-radius: 5px;\n  background: grey;\n  color: white;\n  &:hover {\n    color: tomato;\n  }\n`;\nexport const Container = styled.div`\n  border-bottom: solid 1px;\n`;\n\nexport const Box = styled.div``;\n\nexport const NavLink = styled(Link)`\n  text-decoration: none;\n  display: inline-block;\n  margin: 8px;\n  padding: 8px;\n  border: solid 1px;\n  border-radius: 5px;\n  background: grey;\n  color: white;\n  &:hover {\n    color: tomato;\n  }\n`;\n","import { getByIdMovies } from 'API/moviesAPI';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams, Outlet } from 'react-router-dom';\nimport { LinkBtn, Container, Box, NavLink } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n\n  useEffect(() => {\n    getByIdMovies(movieId).then(setMovieInfo);\n  }, [movieId]);\n\n  if (!movieInfo) {\n    return;\n  }\n\n  const { poster_path, title, vote_average, overview, genres } = movieInfo;\n\n  return (\n    <>\n      <Container>\n        <LinkBtn to=\"/\"> Go back</LinkBtn>\n        <div>\n          <img\n            width=\"200\"\n            src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n            alt=\"img\"\n          />\n        </div>\n\n        <h2>{title}</h2>\n        <div>User score: {vote_average}</div>\n        <div>\n          <h3>Overview</h3> {overview}\n        </div>\n        <div>{genres.map(genre => genre.name).join(' ')}</div>\n        <h3>Additional information</h3>\n      </Container>\n      <Box>\n        <NavLink to=\"cast\">Cast</NavLink>\n\n        <NavLink to=\"reviews\">Reviews</NavLink>\n      </Box>\n\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["LinkBtn","styled","Link","Container","Box","NavLink","movieId","useParams","useState","movieInfo","setMovieInfo","useEffect","getByIdMovies","then","poster_path","title","vote_average","overview","genres","to","width","src","alt","map","genre","name","join"],"sourceRoot":""}