{"version":3,"file":"static/js/212.b39399f3.chunk.js","mappings":"gPAEaA,EAAOC,EAAAA,GAAAA,KAAH,oE,SCkCjB,EAjCmB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAeA,OACE,+BACE,UAACL,EAAD,CAAME,SAXW,SAAAI,GACnBA,EAAEC,iBAEEH,IACFF,EAASE,GACTC,EAAS,IAEZ,EAIG,WACE,kBACEG,KAAK,OACLC,MAAOL,EACPM,SAnBa,SAAAJ,GACnBD,EAASC,EAAEK,cAAcF,MAC1B,EAkBOG,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,mBAAQN,KAAK,SAAb,wBAIP,E,mBC/BYO,EAAOd,EAAAA,GAAAA,GAAH,oEAKJe,EAAOf,EAAAA,GAAAA,GAAH,wCAIJgB,GAAWhB,EAAAA,EAAAA,IAAOiB,EAAAA,GAAPjB,CAAH,kJCqCrB,EA1Ce,WAAO,IAAD,EACnB,GAAwCkB,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BlB,EAAAA,EAAAA,UAAS,IAArC,eAAOmB,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXrB,EAAK,UAAGgB,EAAaM,IAAI,gBAApB,QAAgC,GAa3C,IAPAC,EAAAA,EAAAA,YAAU,WACM,KAAVvB,IAGJwB,EAAAA,EAAAA,IAAgBxB,GAAOyB,MAAK,SAAAC,GAAI,OAAIP,EAAUO,EAAKC,QAAnB,GACjC,GAAE,CAAC3B,IAECkB,EAGL,OACE,iCACE,SAAC,EAAD,CAAYpB,SAhBS,SAAAO,GACvBY,EAA0B,KAAVZ,EAAe,CAAEL,MAAOK,GAAU,CAAC,EACpD,KAeG,SAACM,EAAD,UACGO,EAAOU,OAAS,IACf,yBACGV,EAAOW,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACpB,OACE,SAACnB,EAAD,WACE,SAACC,EAAD,CAAUmB,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMd,GAA9C,SACGU,KAFMC,EAMd,UAMZ,C","sources":["components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","Pages/Movies/Movies.styled.jsx","Pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin-top: 15px;\n  text-align: center;\n`;\n","import { useState } from 'react';\nimport { Form } from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.currentTarget.value);\n  };\n\n  const handelSubmit = e => {\n    e.preventDefault();\n\n    if (query) {\n      onSubmit(query);\n      setQuery('');\n    }\n  };\n\n  return (\n    <>\n      <Form onSubmit={handelSubmit}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={handleChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <button type=\"submit\">Search</button>\n      </Form>\n    </>\n  );\n};\n\nexport default SearchForm;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n  text-align: center;\n`;\n\nexport const Item = styled.li`\n  margin: 5px;\n`;\n\nexport const LinkItem = styled(Link)`\n  color: black;\n  font-weight: 500;\n  font-size: 20px;\n  text-decoration: none;\n  &:hover {\n    color: tomato;\n  }\n`;\n","import { getSearchMovies } from 'API/moviesAPI';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { List, Item, LinkItem } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const query = searchParams.get('query') ?? '';\n\n  const handleFormSubmit = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    getSearchMovies(query).then(data => setMovies(data.results));\n  }, [query]);\n\n  if (!movies) {\n    return;\n  }\n  return (\n    <>\n      <SearchForm onSubmit={handleFormSubmit} />\n      <List>\n        {movies.length > 0 && (\n          <div>\n            {movies.map(({ title, id }) => {\n              return (\n                <Item key={id}>\n                  <LinkItem to={`/movies/${id}`} state={{ from: location }}>\n                    {title}\n                  </LinkItem>\n                </Item>\n              );\n            })}\n          </div>\n        )}\n      </List>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Form","styled","onSubmit","useState","query","setQuery","e","preventDefault","type","value","onChange","currentTarget","autoComplete","autoFocus","placeholder","List","Item","LinkItem","Link","useSearchParams","searchParams","setSearchParams","movies","setMovies","location","useLocation","get","useEffect","getSearchMovies","then","data","results","length","map","title","id","to","state","from"],"sourceRoot":""}